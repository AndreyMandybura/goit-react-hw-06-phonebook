{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","className","s","form","label","type","pattern","title","required","value","onChange","currentTarget","inputName","inputNumber","button","ContactList","contacts","onDeleteContact","list","map","contact","listItem","onClick","id","Filter","header","filterInput","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","Contact","nanoid","some","toLowerCase","alert","includes","contactId","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a4f6776c.chunk.js","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChangeName = e => {\n    setName(e.currentTarget.value);\n  };\n\n  const handleChangeNumber = e => {\n    setNumber(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChangeName}\n          className={s.inputName}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleChangeNumber}\n          className={s.inputNumber}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <div>\n      <ul className={s.list}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={s.listItem}>\n            {contact.name}: {contact.number}\n            <button onClick={() => onDeleteContact(contact.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div>\n      <h4 className={s.header}>Find contacts by name</h4>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n        className={s.filterInput}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const addContact = ({ name, number }) => {\n    const Contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === Contact.name.toLowerCase()\n      ) || contacts.some(contact => contact.number === Contact.number)\n        ? alert(`${Contact.name} is already in contacts!`)\n        : setContacts([...contacts, Contact])\n    )\n      return;\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const handleChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const handleContactFilter = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  useEffect(() => {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter onChange={handleChangeFilter} value={filter} />\n      <ContactList\n        contacts={handleContactFilter()}\n        onDeleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3rjH-\",\"button\":\"ContactForm_button__2lKNe\",\"label\":\"ContactForm_label__2boon\",\"inputName\":\"ContactForm_inputName__1JXzW\",\"inputNumber\":\"ContactForm_inputNumber__22p7Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__e2Ubm\",\"listItem\":\"ContactList_listItem__3t8Ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__3S3U1\",\"header\":\"Filter_header__s_lZp\"};"],"sourceRoot":""}